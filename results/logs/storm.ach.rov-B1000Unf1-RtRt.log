Command:	~/storm/build/bin/storm --prism /rwthfs/rz/cluster/home/tq429871/git/diss/benchmarking/models/rov/rov.prism --prop /rwthfs/rz/cluster/home/tq429871/git/diss/benchmarking/models/rov/rov-B1000Unf1-RtRtachievability.props -const B=1000,Unf=1 --timemem --statistics --sound --topological:minmax svi --native:method svi --topological:relevant-values --absolute
Wallclock time:	1.1157808303833008
Return code:	0
Output:
Storm 1.7.1 (dev)

Date: Sun Dec 18 01:12:07 2022
Command line arguments: --prism /rwthfs/rz/cluster/home/tq429871/git/diss/benchmarking/models/rov/rov.prism --prop /rwthfs/rz/cluster/home/tq429871/git/diss/benchmarking/models/rov/rov-B1000Unf1-RtRtachievability.props -const 'B=1000,Unf=1' --timemem --statistics --sound '--topological:minmax' svi '--native:method' svi '--topological:relevant-values' --absolute
Current working directory: /rwthfs/rz/cluster/home/tq429871/git/diss/benchmarking/scripts

Time for model input parsing: 0.004s.

Time for model construction: 0.219s.

-------------------------------------------------------------- 
Model type: 	MDP (sparse)
States: 	37501
Transitions: 	70001
Choices: 	45001
Reward Models:  time, energy
State Labels: 	2 labels
   * deadlock -> 1 item(s)
   * init -> 1 item(s)
Choice Labels: 	none
-------------------------------------------------------------- 

Model checking property "RtRt": multi(R[exp]{"time"}<=45833333491/10000000 [C], R[exp]{"energy"}<=4399999998900001/1000000000000 [C]) ...
Preprocessing done in 0.032s seconds.
 Result: 
---------------------------------------------------------------------------------------------------------------------------------------
                                                       Multi-objective Query                                              
---------------------------------------------------------------------------------------------------------------------------------------

Original Formula: 
--------------------------------------------------------------
	multi(R[exp]{"time"}<=45833333491/10000000 [C], R[exp]{"energy"}<=4399999998900001/1000000000000 [C])

The query considers 2 objectives:
--------------------------------------------------------------
Original: R[exp]{"time"}<=45833333491/10000000 [C] 	Preprocessed: R[exp]{"time"}min<=45833333491/10000000 [C] 	result bounds: >=0
Original: R[exp]{"energy"}<=4399999998900001/1000000000000 [C] 	Preprocessed: R[exp]{"energy"}min<=4399999998900001/1000000000000 [C] 	result bounds: >=0
Number of Long-Run-Average Reward Objectives (after preprocessing): 0.
Number of Total Reward Objectives (after preprocessing): 2.
--------------------------------------------------------------

Original Model Information:
-------------------------------------------------------------- 
Model type: 	MDP (sparse)
States: 	37501
Transitions: 	70001
Choices: 	45001
Reward Models:  time, energy
State Labels: 	2 labels
   * deadlock -> 1 item(s)
   * init -> 1 item(s)
Choice Labels: 	none
-------------------------------------------------------------- 

Preprocessed Model Information:
-------------------------------------------------------------- 
Model type: 	MDP (sparse)
States: 	37501
Transitions: 	70001
Choices: 	45001
Reward Models:  time, energy
State Labels: 	3 labels
   * deadl -> 1 item(s)
   * deadlock -> 1 item(s)
   * init -> 1 item(s)
Choice Labels: 	none
-------------------------------------------------------------- 

---------------------------------------------------------------------------------------------------------------------------------------

Weight Vector Checker Statistics:
Final preprocessed model has 37501 states.
Final preprocessed model has 45001 actions.

Pareto Curve Approximation Algorithm terminated after 3 refinement steps.
Solving multi-objective query took 0.830s seconds (consisting of 0.032s seconds for preprocessing and 0.797s seconds for analyzing the preprocessed model).
Result (for initial states): false

Time for model checking: 0.830s.

Performance statistics:
  * peak memory usage: 65MB
  * CPU time: 1.048s
  * wallclock time: 1.059s


############################## Notes ##############################
Storm. check achievability objectives using sound value iteration
